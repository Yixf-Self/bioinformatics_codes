
# ABOUT
#Life saving oneliners. Hope you find them useful. 
# Many codes collected from Internet. Credits for those scripts goes to the original authors. 

#CODES
#

ID: 1
DESC: Compare a list against the first column of a tab separated tabular data and output the subset
KW: "Compare two list",
AU: kcm.eid[at]gmail.com
CODE: perl -ne 'chomp; @a=split /\s+/,$_; if($h{$a[0]}){print "$_\n"; } else {$h{$a[0]}=1 }' test pfam/Pfam-A_annot.txt > test2.txt
// 
ID: 2
DESC: Fetch sequences of input IDs
KW: "subset multifasta","ID file", "FASTA file"
AU: Internet
CODE: perl -ne 'if(/^>(\S+)/){$c=$i{$1}}$c?print:chomp;$i{$_}=1 if @ARGV' ids.file fasta.file
// 
ID: 3
DESC: Extract the longest isoform from multi fasta file 
COMMENT: assumes input ID header: scitn003313.1; if you have differnet id change the $g=~s/\.\d+$//g;  suitable e.g: for Glyma.01G000100.1.p , change to $g=~s/\.\d+\.p$//g;
COMMENT: if isoforms have identical length, randomly any one is picked;
KW: "longest isoform", "FASTA file"
AU: kcm.eid[at]gmail.com
CODE: perl -e 'open F,$ARGV[0] or die "$ARGV[0] $!"; %seq; %head; %pTrans; $id;$g;  while(<F>){chomp;if(/^>(\S+)/){$id=$1; $head{$id}=$_;$g=$id; $g=~s/\.\d+$//g; $pTrans{$g}->{$id}=0; } else{$seq{$id}.=$_;  $pTrans{$g}->{$id}=length $seq{$id};  } } foreach my $g ( sort keys %pTrans){  foreach (sort {$pTrans{$g}->{$b} <=> $pTrans{$g}->{$a} } keys %{$pTrans{$g}}){print "$head{$_}\n$seq{$_}\n"; last;} } ' test.fasta 
//
ID: 4
DESC: Example commands to remove lower-case masking
KW: "remove lower-case", "FASTA file"
AU: NCBI internet
CODE: perl -pe '/^[^>]/ and $_=uc' genomic.fna > genomic.unmasked.fna
//
ID: 5 
DESC: Example commands to convert lower-case masking to masking with Ns (hard-masked) 
COMMENT: perl -pe '/^[^>]/ and $_=~ s/[a-z]/N/g' genomic.fna > genomic.N-masked.fna
KW: "hard-masking", "FASTA file"
AU: NCBI internet
CODE: perl -pe '/^[^>]/ and $_=~ s/[a-z]/N/g' genomic.fna > genomic.N-masked.fna
//
ID: 6
DESC: Convert single-line-FASTA file to multi-line FASTA file
COMMENT: change --> [^\n]{20}  <-- 20 to desired width
KW: "single-line FASTA", "multi-line FASTA", "formatted fasta"
AU: kcm.eid[at]gmail.com; perlmonk.org
CODE: perl -ne 'chomp; if(/^>/){print "$_\n" } else { ~s/([^\n]{20})([^\n])/$1\n$2/g; print "$_\n";}' single_line_fasta.fasta
//

ID: 7
DESC: Convert multi-line-FASTA file to single-line FASTA file
COMMENT: 
KW: "single-line FASTA", "multi-line FASTA", "formatted fasta"
AU: kcm.eid@gmail.com
CODE: perl -ne 'chomp; if(/^>/){print "\n$_\n" } else { ~s/\n//g; print "$_";}' multi-line FASTA.fasta
//
ID: 8
DESC: Convert single-line-FASTA file to TAB- file (ID \t SEQ)
COMMENT: 
KW: "single-line FASTA", "TABULAR", "formatted fasta"
AU: 
CODE: 
//






